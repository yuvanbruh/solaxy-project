import{e as I}from"./chunk-JOVT4LBN.js";function x(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function h(t){if(!x(t))throw new Error("Uint8Array expected")}function O(t,e){if(typeof e!="boolean")throw new Error(t+" boolean expected, got "+e)}function V(t){let e=t.toString(16);return e.length&1?"0"+e:e}function A(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return t===""?w:BigInt("0x"+t)}function B(t){if(h(t),E)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=S[t[n]];return e}function m(t){if(t>=s._0&&t<=s._9)return t-s._0;if(t>=s.A&&t<=s.F)return t-(s.A-10);if(t>=s.a&&t<=s.f)return t-(s.a-10)}function U(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(E)return Uint8Array.fromHex(t);let e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);let r=new Uint8Array(n);for(let o=0,i=0;o<n;o++,i+=2){let a=m(t.charCodeAt(i)),f=m(t.charCodeAt(i+1));if(a===void 0||f===void 0){let c=t[i]+t[i+1];throw new Error('hex string expected, got non-hex character "'+c+'" at index '+i)}r[o]=a*16+f}return r}function C(t){return A(B(t))}function M(t){return h(t),A(B(Uint8Array.from(t).reverse()))}function v(t,e){return U(t.toString(16).padStart(e*2,"0"))}function R(t,e){return v(t,e).reverse()}function j(t,e,n){let r;if(typeof e=="string")try{r=U(e)}catch(i){throw new Error(t+" must be hex string or Uint8Array, cause: "+i)}else if(x(e))r=Uint8Array.from(e);else throw new Error(t+" must be hex string or Uint8Array");let o=r.length;if(typeof n=="number"&&o!==n)throw new Error(t+" of length "+n+" expected, got "+o);return r}function H(...t){let e=0;for(let r=0;r<t.length;r++){let o=t[r];h(o),e+=o.length}let n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){let i=t[r];n.set(i,o),o+=i.length}return n}function z(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function _(t,e,n){return g(t)&&g(e)&&g(n)&&e<=t&&t<n}function D(t,e,n,r){if(!_(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}function G(t){let e;for(e=0;t>w;t>>=d,e+=1);return e}function W(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");let r=y(t),o=y(t),i=0,a=()=>{r.fill(1),o.fill(0),i=0},f=(...u)=>n(o,r,...u),c=(u=y(0))=>{o=f(b([0]),u),r=f(),u.length!==0&&(o=f(b([1]),u),r=f())},T=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let u=0,p=[];for(;u<e;){r=f();let l=r.slice();p.push(l),u+=r.length}return H(...p)};return(u,p)=>{a(),c(u);let l;for(;!(l=p(T()));)c();return a(),l}}function q(t,e,n={}){let r=(o,i,a)=>{let f=N[i];if(typeof f!="function")throw new Error("invalid validator function");let c=t[o];if(!(a&&c===void 0)&&!f(c,t))throw new Error("param "+String(o)+" is invalid. Expected "+i+", got "+c)};for(let[o,i]of Object.entries(e))r(o,i,!1);for(let[o,i]of Object.entries(n))r(o,i,!0);return t}function J(t){let e=new WeakMap;return(n,...r)=>{let o=e.get(n);if(o!==void 0)return o;let i=t(n,...r);return e.set(n,i),i}}var w,d,E,S,s,g,P,y,b,N,k=I(()=>{"use strict";w=BigInt(0),d=BigInt(1);E=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",S=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));s={_0:48,_9:57,A:65,F:70,a:97,f:102};g=t=>typeof t=="bigint"&&w<=t;P=t=>(d<<BigInt(t))-d,y=t=>new Uint8Array(t),b=t=>Uint8Array.from(t);N={bigint:t=>typeof t=="bigint",function:t=>typeof t=="function",boolean:t=>typeof t=="boolean",string:t=>typeof t=="string",stringOrUint8Array:t=>typeof t=="string"||x(t),isSafeInteger:t=>Number.isSafeInteger(t),array:t=>Array.isArray(t),field:(t,e)=>e.Fp.isValid(t),hash:t=>typeof t=="function"&&Number.isSafeInteger(t.outputLen)}});export{x as a,h as b,O as c,V as d,B as e,U as f,C as g,M as h,v as i,R as j,j as k,H as l,z as m,_ as n,D as o,G as p,P as q,W as r,q as s,J as t,k as u};
